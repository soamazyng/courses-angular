{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nconst _c0 = function (a0) {\n  return {\n    backgroundColor: a0\n  };\n};\n\nconst _c1 = function (a0) {\n  return {\n    online: a0\n  };\n};\n\nexport class ServerComponent {\n  constructor() {\n    this.serverId = 10;\n    this.serverStatus = 'offline';\n    this.serverStatus = Math.random() > 0.5 ? 'online' : 'offline';\n  }\n\n  getServerStatus() {\n    return this.serverStatus;\n  }\n\n  getColor() {\n    return this.serverStatus === 'online' ? 'red' : 'green';\n  }\n\n  static #_ = this.ɵfac = function ServerComponent_Factory(t) {\n    return new (t || ServerComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ServerComponent,\n    selectors: [[\"app-server\"]],\n    decls: 2,\n    vars: 8,\n    consts: [[3, \"ngStyle\", \"ngClass\"]],\n    template: function ServerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, ctx.getColor()))(\"ngClass\", i0.ɵɵpureFunction1(6, _c1, ctx.serverStatus === \"online\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate2(\" Server with ID \", ctx.serverId, \" is \", ctx.getServerStatus(), \"\\n\");\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgStyle],\n    styles: [\".online[_ngcontent-%COMP%] {\\n        color: white;\\n      }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2VydmVyL3NlcnZlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtNQUNNO1FBQ0UsWUFBWTtNQUNkIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgICAub25saW5lIHtcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgfVxuICAgICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"sources":["D:\\www\\Cursos\\courses-angular\\Udemy\\Angular-TheCompleteGuide\\my-first-app\\src\\app\\server\\server.component.ts","D:\\www\\Cursos\\courses-angular\\Udemy\\Angular-TheCompleteGuide\\my-first-app\\src\\app\\server\\server.component.html"],"names":[],"mappings":";;;;;;;;;;;;;;;AAaA,OAAM,MAAO,eAAP,CAAsB;AAI1B,EAAA,WAAA,GAAA;AAHA,SAAA,QAAA,GAAW,EAAX;AACA,SAAA,YAAA,GAAe,SAAf;AAGE,SAAK,YAAL,GAAoB,IAAI,CAAC,MAAL,KAAgB,GAAhB,GAAsB,QAAtB,GAAiC,SAArD;AACD;;AAED,EAAA,eAAe,GAAA;AACb,WAAO,KAAK,YAAZ;AACD;;AAED,EAAA,QAAQ,GAAA;AACN,WAAO,KAAK,YAAL,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,OAAhD;AACD;;AAdyB,c;qBAAf,e;AAAe,GAAA;AAAA,e;UAAf,e;AAAe,IAAA,SAAA,EAAA,CAAA,CAAA,YAAA,CAAA,C;AAAA,IAAA,KAAA,EAAA,C;AAAA,IAAA,IAAA,EAAA,C;AAAA,IAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,CAAA,C;AAAA,IAAA,QAAA,EAAA,SAAA,wBAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,UAAA,EAAA,GAAA,CAAA,EAAA;ACb5B,QAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;AAIE,QAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AACF,QAAA,EAAA,CAAA,YAAA;;;;AAJE,QAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,EAAA,CAAA,eAAA,CAAA,CAAA,EAAA,GAAA,EAAA,GAAA,CAAA,QAAA,EAAA,CAAA,EAA2C,SAA3C,EAA2C,EAAA,CAAA,eAAA,CAAA,CAAA,EAAA,GAAA,EAAA,GAAA,CAAA,YAAA,KAAA,QAAA,CAA3C;AAGA,QAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,QAAA,EAAA,CAAA,kBAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,QAAA,EAAA,MAAA,EAAA,GAAA,CAAA,eAAA,EAAA,EAAA,IAAA;;;;;IDS0B;AAAA","sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-server',\r\n  templateUrl: './server.component.html',\r\n  styles: [\r\n    `\r\n      .online {\r\n        color: white;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class ServerComponent {\r\n  serverId = 10;\r\n  serverStatus = 'offline';\r\n\r\n  constructor() {\r\n    this.serverStatus = Math.random() > 0.5 ? 'online' : 'offline';\r\n  }\r\n\r\n  getServerStatus(): string {\r\n    return this.serverStatus;\r\n  }\r\n\r\n  getColor(): string {\r\n    return this.serverStatus === 'online' ? 'red' : 'green';\r\n  }\r\n}\r\n","<p\r\n  [ngStyle]=\"{ backgroundColor: getColor() }\"\r\n  [ngClass]=\"{ online: serverStatus === 'online' }\"\r\n>\r\n  Server with ID {{ serverId }} is {{ getServerStatus() }}\r\n</p>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module","externalDependencies":[]}